output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
## Setup
### Dependencies
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/FullLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
# solutions_10K_data_loc <- "../data/ps-exp-data/min_programs_10000.csv"
# solutions_10K_summary_data_loc <- "../data/ps-exp-data/min_programs_163KEval__solutions_summary.csv"
prog_solutions_CN1_loc <- "../Raw/FullLife/CN_1Generations.csv"
prog_solutions_CN2_loc <- "../Raw/FullLife/CN_2Generations.csv"
prog_solutions_CN4_loc <- "../Raw/FullLife/CN_4Generations.csv"
prog_solutions_CN8_loc <- "../Raw/FullLife/CN_8Generations.csv"
prog_solutions_CN16_loc <- "../Raw/FullLife/CN_16Generations.csv"
prog_solutions_CN32_loc <- "../Raw/FullLife/CN_32Generations.csv"
prog_solutions_CN64_loc <- "../Raw/FullLife/CN_64Generations.csv"
prog_solutions_CN128_loc <- "../Raw/FullLife/CN_128Generations.csv"
prog_solutions_CN256_loc <- "../Raw/FullLife/CN_256Generations.csv"
```
```{r}
prog_solutions_CN1 <- read.csv(prog_solutions_CN1_loc, na.strings = "NONE")
prog_solutions_CN2 <- read.csv(prog_solutions_CN2_loc, na.strings = "NONE")
prog_solutions_CN4 <- read.csv(prog_solutions_CN4_loc, na.strings = "NONE")
prog_solutions_CN8 <- read.csv(prog_solutions_CN8_loc, na.strings = "NONE")
prog_solutions_CN16 <- read.csv(prog_solutions_CN16_loc, na.strings = "NONE")
prog_solutions_CN32 <- read.csv(prog_solutions_CN32_loc, na.strings = "NONE")
prog_solutions_CN64 <- read.csv(prog_solutions_CN64_loc, na.strings = "NONE")
prog_solutions_CN128 <- read.csv(prog_solutions_CN128_loc, na.strings = "NONE")
prog_solutions_CN256 <- read.csv(prog_solutions_CN256_loc, na.strings = "NONE")
```
## Analysis
Count of solutions found per problem (30 replicates each)
```{r}
ggplot(data = prog_solutions_CN1, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN1_CS512 - Gens") +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/FullLife/CN1_Count.png")
ggplot(data = prog_solutions_CN2, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN2_CS256 - Gens") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/FullLife/CN2_Count.png")
ggplot(data = prog_solutions_CN4, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN4_CS128 - Gens") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/FullLife/CN4_Count.png")
ggplot(data = prog_solutions_CN8, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN8_CS64 - Gens") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/FullLife/CN8_Count.png")
ggplot(data = prog_solutions_CN16, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN16_CS32 - Gens") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/FullLife/CN16_Count.png")
ggplot(data = prog_solutions_CN32, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN32_CS16 - Gens") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/FullLife/CN32_Count.png")
ggplot(data = prog_solutions_CN64, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN64_CS8 - Gens") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/FullLife/CN64_Count.png")
ggplot(data = prog_solutions_CN128, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN128_CS4 - Gens") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/FullLife/CN128_Count.png")
ggplot(data = prog_solutions_CN256, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN256_CS2 - Gens") +
coord_flip() + facet_wrap( ~ problem) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
ggsave("../Figs/Generations/SolutionCount/FullLife/CN256_Count.png")
```
---
title: "Sorting network data exploration"
output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
## Setup
### Dependencies
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/FullLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
# solutions_10K_data_loc <- "../data/ps-exp-data/min_programs_10000.csv"
# solutions_10K_summary_data_loc <- "../data/ps-exp-data/min_programs_163KEval__solutions_summary.csv"
prog_solutions_CN1_loc <- "../Raw/FullLife/CN_1Evaluations.csv"
prog_solutions_CN2_loc <- "../Raw/FullLife/CN_2Evaluations.csv"
prog_solutions_CN4_loc <- "../Raw/FullLife/CN_4Evaluations.csv"
prog_solutions_CN8_loc <- "../Raw/FullLife/CN_8Evaluations.csv"
prog_solutions_CN16_loc <- "../Raw/FullLife/CN_16Evaluations.csv"
prog_solutions_CN32_loc <- "../Raw/FullLife/CN_32Evaluations.csv"
prog_solutions_CN64_loc <- "../Raw/FullLife/CN_64Evaluations.csv"
prog_solutions_CN128_loc <- "../Raw/FullLife/CN_128Evaluations.csv"
prog_solutions_CN256_loc <- "../Raw/FullLife/CN_256Evaluations.csv"
```
```{r}
prog_solutions_CN1 <- read.csv(prog_solutions_CN1_loc, na.strings = "NONE")
prog_solutions_CN2 <- read.csv(prog_solutions_CN2_loc, na.strings = "NONE")
prog_solutions_CN4 <- read.csv(prog_solutions_CN4_loc, na.strings = "NONE")
prog_solutions_CN8 <- read.csv(prog_solutions_CN8_loc, na.strings = "NONE")
prog_solutions_CN16 <- read.csv(prog_solutions_CN16_loc, na.strings = "NONE")
prog_solutions_CN32 <- read.csv(prog_solutions_CN32_loc, na.strings = "NONE")
prog_solutions_CN64 <- read.csv(prog_solutions_CN64_loc, na.strings = "NONE")
prog_solutions_CN128 <- read.csv(prog_solutions_CN128_loc, na.strings = "NONE")
prog_solutions_CN256 <- read.csv(prog_solutions_CN256_loc, na.strings = "NONE")
```
## Analysis
Count of solutions found per problem (30 replicates each)
```{r}
ggplot(data = prog_solutions_CN1, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN1_CS512 - Evals") +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN1_Count.png")
ggplot(data = prog_solutions_CN2, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN2_CS256 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN2_Count.png")
ggplot(data = prog_solutions_CN4, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN4_CS128 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN4_Count.png")
ggplot(data = prog_solutions_CN8, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN8_CS64 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN8_Count.png")
ggplot(data = prog_solutions_CN16, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN16_CS32 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN16_Count.png")
ggplot(data = prog_solutions_CN32, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN32_CS16 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN32_Count.png")
ggplot(data = prog_solutions_CN64, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN64_CS8 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN64_Count.png")
ggplot(data = prog_solutions_CN128, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN128_CS4 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN128_Count.png")
ggplot(data = prog_solutions_CN256, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN256_CS2 - Evals") +
coord_flip() + facet_wrap( ~ problem) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN256_Count.png")
```
---
title: "Sorting network data exploration"
output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
## Setup
### Dependencies
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/HalfLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
# solutions_10K_data_loc <- "../data/ps-exp-data/min_programs_10000.csv"
# solutions_10K_summary_data_loc <- "../data/ps-exp-data/min_programs_163KEval__solutions_summary.csv"
prog_solutions_CN1_loc <- "../Raw/HalfLife/CN_1Evaluations.csv"
prog_solutions_CN2_loc <- "../Raw/HalfLife/CN_2Evaluations.csv"
prog_solutions_CN4_loc <- "../Raw/HalfLife/CN_4Evaluations.csv"
prog_solutions_CN8_loc <- "../Raw/HalfLife/CN_8Evaluations.csv"
prog_solutions_CN16_loc <- "../Raw/HalfLife/CN_16Evaluations.csv"
prog_solutions_CN32_loc <- "../Raw/HalfLife/CN_32Evaluations.csv"
prog_solutions_CN64_loc <- "../Raw/HalfLife/CN_64Evaluations.csv"
prog_solutions_CN128_loc <- "../Raw/HalfLife/CN_128Evaluations.csv"
prog_solutions_CN256_loc <- "../Raw/HalfLife/CN_256Evaluations.csv"
```
```{r}
prog_solutions_CN1 <- read.csv(prog_solutions_CN1_loc, na.strings = "NONE")
prog_solutions_CN2 <- read.csv(prog_solutions_CN2_loc, na.strings = "NONE")
prog_solutions_CN4 <- read.csv(prog_solutions_CN4_loc, na.strings = "NONE")
prog_solutions_CN8 <- read.csv(prog_solutions_CN8_loc, na.strings = "NONE")
prog_solutions_CN16 <- read.csv(prog_solutions_CN16_loc, na.strings = "NONE")
prog_solutions_CN32 <- read.csv(prog_solutions_CN32_loc, na.strings = "NONE")
prog_solutions_CN64 <- read.csv(prog_solutions_CN64_loc, na.strings = "NONE")
prog_solutions_CN128 <- read.csv(prog_solutions_CN128_loc, na.strings = "NONE")
prog_solutions_CN256 <- read.csv(prog_solutions_CN256_loc, na.strings = "NONE")
```
## Analysis
Count of solutions found per problem (30 replicates each)
```{r}
ggplot(data = prog_solutions_CN1, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN1_CS512 - Evals") +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN1_Count.png")
ggplot(data = prog_solutions_CN2, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN2_CS256 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN2_Count.png")
ggplot(data = prog_solutions_CN4, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN4_CS128 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN4_Count.png")
ggplot(data = prog_solutions_CN8, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN8_CS64 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN8_Count.png")
ggplot(data = prog_solutions_CN16, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN16_CS32 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN16_Count.png")
ggplot(data = prog_solutions_CN32, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN32_CS16 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN32_Count.png")
ggplot(data = prog_solutions_CN64, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN64_CS8 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN64_Count.png")
ggplot(data = prog_solutions_CN128, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN128_CS4 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN128_Count.png")
ggplot(data = prog_solutions_CN256, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN256_CS2 - Evals") +
coord_flip() + facet_wrap( ~ problem) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN256_Count.png")
```
---
title: "Sorting network data exploration"
output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
## Setup
### Dependencies
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/HalfLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
# solutions_10K_data_loc <- "../data/ps-exp-data/min_programs_10000.csv"
# solutions_10K_summary_data_loc <- "../data/ps-exp-data/min_programs_163KEval__solutions_summary.csv"
fli_loc <- "../Raw/HalfLife/for-loop-indexGenerations.csv"
smallest_loc <- "../Raw/HalfLife/smallestGenerations.csv"
sol_loc <- "../Raw/HalfLife/small-or-largeGenerations.csv"
med_loc <- "../Raw/HalfLife/medianGenerations.csv"
prob_loc <- "../Raw/100_Or_Less/ProblemGenerations.csv"
```
```{r}
fli <- read.csv(fli_loc, na.strings = "NONE")
smallest <- read.csv(smallest_loc, na.strings = "NONE")
sol <- read.csv(sol_loc, na.strings = "NONE")
med <- read.csv(med_loc, na.strings = "NONE")
prob <- read.csv(prob_loc, na.strings = "NONEs")
```
## Analysis
Count of solutions found per problem (30 replicates each)
```{r}
ggplot(data = prob, mapping=aes(x=dims, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Problems") +
scale_x_discrete(limits = c("CN1_CS512", "CN2_CS256", "CN4_CS128", "", "CN8_CS64", "CN16_CS32", "CN32_CS16", "CN64_CS8", "CN128_CS4", "CN256_CS2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/100_Or_Less/ProblemCompare.png")
```
---
title: "Sorting network data exploration"
output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
## Setup
### Dependencies
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/HalfLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
# solutions_10K_data_loc <- "../data/ps-exp-data/min_programs_10000.csv"
# solutions_10K_summary_data_loc <- "../data/ps-exp-data/min_programs_163KEval__solutions_summary.csv"
fli_loc <- "../Raw/HalfLife/for-loop-indexGenerations.csv"
smallest_loc <- "../Raw/HalfLife/smallestGenerations.csv"
sol_loc <- "../Raw/HalfLife/small-or-largeGenerations.csv"
med_loc <- "../Raw/HalfLife/medianGenerations.csv"
prob_loc <- "../Raw/100_Or_Less/ProblemGenerations.csv"
```
```{r}
fli <- read.csv(fli_loc, na.strings = "NONE")
smallest <- read.csv(smallest_loc, na.strings = "NONE")
sol <- read.csv(sol_loc, na.strings = "NONE")
med <- read.csv(med_loc, na.strings = "NONE")
prob <- read.csv(prob_loc, na.strings = "NONEs")
```
## Analysis
Count of solutions found per problem (30 replicates each)
```{r}
ggplot(data = prob, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Problems") +
scale_x_discrete(limits = c("CN1_CS512", "CN2_CS256", "CN4_CS128", "", "CN8_CS64", "CN16_CS32", "CN32_CS16", "CN64_CS8", "CN128_CS4", "CN256_CS2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/100_Or_Less/ProblemCompare.png")
```
---
title: "Sorting network data exploration"
output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
## Setup
### Dependencies
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/HalfLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
# solutions_10K_data_loc <- "../data/ps-exp-data/min_programs_10000.csv"
# solutions_10K_summary_data_loc <- "../data/ps-exp-data/min_programs_163KEval__solutions_summary.csv"
fli_loc <- "../Raw/HalfLife/for-loop-indexGenerations.csv"
smallest_loc <- "../Raw/HalfLife/smallestGenerations.csv"
sol_loc <- "../Raw/HalfLife/small-or-largeGenerations.csv"
med_loc <- "../Raw/HalfLife/medianGenerations.csv"
prob_loc <- "../Raw/100_Or_Less/ProblemGenerations.csv"
```
```{r}
fli <- read.csv(fli_loc, na.strings = "NONE")
smallest <- read.csv(smallest_loc, na.strings = "NONE")
sol <- read.csv(sol_loc, na.strings = "NONE")
med <- read.csv(med_loc, na.strings = "NONE")
prob <- read.csv(prob_loc, na.strings = "NONEs")
```
## Analysis
Count of solutions found per problem (30 replicates each)
```{r}
ggplot(data = prob, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Problems") +
scale_x_discrete(limits = c("cn1_cs512", "C2_cs256", "cn4_cs128", "", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/100_Or_Less/ProblemCompare.png")
```
---
title: "Sorting network data exploration"
output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
## Setup
### Dependencies
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/HalfLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
# solutions_10K_data_loc <- "../data/ps-exp-data/min_programs_10000.csv"
# solutions_10K_summary_data_loc <- "../data/ps-exp-data/min_programs_163KEval__solutions_summary.csv"
fli_loc <- "../Raw/HalfLife/for-loop-indexGenerations.csv"
smallest_loc <- "../Raw/HalfLife/smallestGenerations.csv"
sol_loc <- "../Raw/HalfLife/small-or-largeGenerations.csv"
med_loc <- "../Raw/HalfLife/medianGenerations.csv"
prob_loc <- "../Raw/100_Or_Less/ProblemGenerations.csv"
```
```{r}
fli <- read.csv(fli_loc, na.strings = "NONE")
smallest <- read.csv(smallest_loc, na.strings = "NONE")
sol <- read.csv(sol_loc, na.strings = "NONE")
med <- read.csv(med_loc, na.strings = "NONE")
prob <- read.csv(prob_loc, na.strings = "NONEs")
```
## Analysis
Count of solutions found per problem (50 replicates each)
```{r}
ggplot(data = prob, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Problems") +
scale_x_discrete(limits = c("cn1_cs512", "C2_cs256", "cn4_cs128", "", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/100_Or_Less/ProblemCompare.png")
```
