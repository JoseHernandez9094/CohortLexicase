output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
<!-- ## Setup -->
<!-- ### Dependencies -->
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/HalfLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
prob_100_gen_loc <- "../Raw/100_Or_Less/ProblemGenerations.csv"
prob_300_gen_loc <- "../Raw/300_Or_Less/ProblemGenerations.csv"
prob_half_gen_loc <- "../Raw/HalfLife/ProblemGenerations.csv"
prob_full_gen_loc <- "../Raw/FullLife/ProblemGenerations.csv"
prob_100_eva_loc <- "../Raw/100_Or_Less/ProblemEvaluations.csv"
prob_300_eva_loc <- "../Raw/300_Or_Less/ProblemEvaluations.csv"
prob_half_eva_loc <- "../Raw/HalfLife/ProblemEvaluations.csv"
prob_full_eva_loc <- "../Raw/FullLife/ProblemEvaluations.csv"
```
```{r}
prob_100_gen <- read.csv(prob_100_gen_loc, na.strings = "NONE")
prob_300_gen <- read.csv(prob_300_gen_loc, na.strings = "NONE")
prob_half_gen <- read.csv(prob_half_gen_loc, na.strings = "NONE")
prob_full_gen <- read.csv(prob_full_gen_loc, na.strings = "NONE")
prob_100_eva <- read.csv(prob_100_eva_loc, na.strings = "NONE")
prob_300_eva <- read.csv(prob_300_eva_loc, na.strings = "NONE")
prob_half_eva <- read.csv(prob_half_eva_loc, na.strings = "NONE")
prob_full_eva <- read.csv(prob_full_eva_loc, na.strings = "NONE")
```
<!-- ## Analysis -->
<!-- Count of solutions found per problem (50 replicates each) -->
```{r}
#Will plot graphs for solutions found before 100 generation
ggplot(data = prob_100_gen, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 100 generations") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/100_Or_Less/100Gens-ProblemCompare.png", height=5, width=6)
#Will plot graphs for soulutions found before 300 generations
ggplot(data = prob_300_gen, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 300 generations") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/300_Or_Less/300Gens-ProblemCompare.png", height=5, width=6)
#Will plot graphs for solutions found before half life, 500 generation
ggplot(data = prob_half_gen, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 500 generations") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/HalfLife/HalfGens-ProblemCompare.png", height=5, width=6)
#Will plot graphs for solutions found at the end of the run, 1000 generations
ggplot(data = prob_full_gen, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions found at the end of run") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/FullLife/FullGens-ProblemCompare.png", height=5, width=6)
ggplot(data = prob_100_eva, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 100 gens worth of evals") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/100_Or_Less/100Evals-ProblemCompare.png", height=5, width=6)
ggplot(data = prob_300_eva, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 300 gens worth of evals") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/300_Or_Less/300Evals-ProblemCompare.png", height=5, width=6)
ggplot(data = prob_half_eva, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 500 gens worth of evals") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/HalfEvals-ProblemCompare.png", height=5, width=6)
ggplot(data = prob_full_eva, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 1000 gens worth of evals") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/FullEvals-ProblemCompare.png", height=5, width=6)
```
---
title: "Sorting network data exploration"
output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
<!-- ## Setup -->
<!-- ### Dependencies -->
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/HalfLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
prob_100_gen_loc <- "../Raw/100_Or_Less/ProblemGenerations.csv"
prob_300_gen_loc <- "../Raw/300_Or_Less/ProblemGenerations.csv"
prob_half_gen_loc <- "../Raw/HalfLife/ProblemGenerations.csv"
prob_full_gen_loc <- "../Raw/FullLife/ProblemGenerations.csv"
prob_100_eva_loc <- "../Raw/100_Or_Less/ProblemEvaluations.csv"
prob_300_eva_loc <- "../Raw/300_Or_Less/ProblemEvaluations.csv"
prob_half_eva_loc <- "../Raw/HalfLife/ProblemEvaluations.csv"
prob_full_eva_loc <- "../Raw/FullLife/ProblemEvaluations.csv"
```
```{r}
prob_100_gen <- read.csv(prob_100_gen_loc, na.strings = "NONE")
prob_300_gen <- read.csv(prob_300_gen_loc, na.strings = "NONE")
prob_half_gen <- read.csv(prob_half_gen_loc, na.strings = "NONE")
prob_full_gen <- read.csv(prob_full_gen_loc, na.strings = "NONE")
prob_100_eva <- read.csv(prob_100_eva_loc, na.strings = "NONE")
prob_300_eva <- read.csv(prob_300_eva_loc, na.strings = "NONE")
prob_half_eva <- read.csv(prob_half_eva_loc, na.strings = "NONE")
prob_full_eva <- read.csv(prob_full_eva_loc, na.strings = "NONE")
```
<!-- ## Analysis -->
<!-- Count of solutions found per problem (50 replicates each) -->
```{r}
#Will plot graphs for solutions found before 100 generation
ggplot(data = prob_100_gen, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 100 generations") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/100_Or_Less/100Gens-ProblemCompare.png", height=5, width=6)
#Will plot graphs for soulutions found before 300 generations
ggplot(data = prob_300_gen, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 300 generations") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/300_Or_Less/300Gens-ProblemCompare.png", height=5, width=6)
#Will plot graphs for solutions found before half life, 500 generation
ggplot(data = prob_half_gen, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 500 generations") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/HalfLife/HalfGens-ProblemCompare.png", height=5, width=6)
#Will plot graphs for solutions found at the end of the run, 1000 generations
ggplot(data = prob_full_gen, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions found at the end of run") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Generations/SolutionCount/FullLife/FullGens-ProblemCompare.png", height=5, width=6)
ggplot(data = prob_100_eva, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 100 gens worth of evals") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/100_Or_Less/100Evals-ProblemCompare.png", height=5, width=6)
ggplot(data = prob_300_eva, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 300 gens worth of evals") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/300_Or_Less/300Evals-ProblemCompare.png", height=5, width=6)
ggplot(data = prob_half_eva, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 500 gens worth of evals") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/HalfEvals-ProblemCompare.png", height=5, width=6)
ggplot(data = prob_full_eva, mapping=aes(x=dims, y=count, fill=dims)) +
geom_bar(stat="identity") + xlab("Dimensions") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("Solutions up to 1000 gens worth of evals") +
scale_x_discrete(limits = c("cn1_cs512", "cn2_cs256", "cn4_cs128", "cn8_cs64", "cn16_cs32", "cn32_cs16", "cn64_cs8", "cn128_cs4", "cn256_cs2")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/FullEvals-ProblemCompare.png", height=5, width=6)
```
---
title: "Sorting network data exploration"
output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
## Setup
### Dependencies
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/FullLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
# solutions_10K_data_loc <- "../data/ps-exp-data/min_programs_10000.csv"
# solutions_10K_summary_data_loc <- "../data/ps-exp-data/min_programs_163KEval__solutions_summary.csv"
prog_solutions_CN1_loc <- "../Raw/FullLife/CN_1Evaluations.csv"
prog_solutions_CN2_loc <- "../Raw/FullLife/CN_2Evaluations.csv"
prog_solutions_CN4_loc <- "../Raw/FullLife/CN_4Evaluations.csv"
prog_solutions_CN8_loc <- "../Raw/FullLife/CN_8Evaluations.csv"
prog_solutions_CN16_loc <- "../Raw/FullLife/CN_16Evaluations.csv"
prog_solutions_CN32_loc <- "../Raw/FullLife/CN_32Evaluations.csv"
prog_solutions_CN64_loc <- "../Raw/FullLife/CN_64Evaluations.csv"
prog_solutions_CN128_loc <- "../Raw/FullLife/CN_128Evaluations.csv"
prog_solutions_CN256_loc <- "../Raw/FullLife/CN_256Evaluations.csv"
```
```{r}
prog_solutions_CN1 <- read.csv(prog_solutions_CN1_loc, na.strings = "NONE")
prog_solutions_CN2 <- read.csv(prog_solutions_CN2_loc, na.strings = "NONE")
prog_solutions_CN4 <- read.csv(prog_solutions_CN4_loc, na.strings = "NONE")
prog_solutions_CN8 <- read.csv(prog_solutions_CN8_loc, na.strings = "NONE")
prog_solutions_CN16 <- read.csv(prog_solutions_CN16_loc, na.strings = "NONE")
prog_solutions_CN32 <- read.csv(prog_solutions_CN32_loc, na.strings = "NONE")
prog_solutions_CN64 <- read.csv(prog_solutions_CN64_loc, na.strings = "NONE")
prog_solutions_CN128 <- read.csv(prog_solutions_CN128_loc, na.strings = "NONE")
prog_solutions_CN256 <- read.csv(prog_solutions_CN256_loc, na.strings = "NONE")
```
## Analysis
Count of solutions found per problem (30 replicates each)
```{r}
ggplot(data = prog_solutions_CN1, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN1_CS512 - Evals") +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN1_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN2, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN2_CS256 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN2_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN4, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN4_CS128 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN4_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN8, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN8_CS64 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN8_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN16, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN16_CS32 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN16_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN32, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN32_CS16 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN32_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN64, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN64_CS8 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN64_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN128, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN128_CS4 - Evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN128_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN256, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN256_CS2 - Evals") +
coord_flip() + facet_wrap( ~ problem) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN256_Count.png", height=5, width=6)
```
---
title: "Sorting network data exploration"
output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
## Setup
### Dependencies
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/FullLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
# solutions_10K_data_loc <- "../data/ps-exp-data/min_programs_10000.csv"
# solutions_10K_summary_data_loc <- "../data/ps-exp-data/min_programs_163KEval__solutions_summary.csv"
prog_solutions_CN1_loc <- "../Raw/FullLife/CN_1Evaluations.csv"
prog_solutions_CN2_loc <- "../Raw/FullLife/CN_2Evaluations.csv"
prog_solutions_CN4_loc <- "../Raw/FullLife/CN_4Evaluations.csv"
prog_solutions_CN8_loc <- "../Raw/FullLife/CN_8Evaluations.csv"
prog_solutions_CN16_loc <- "../Raw/FullLife/CN_16Evaluations.csv"
prog_solutions_CN32_loc <- "../Raw/FullLife/CN_32Evaluations.csv"
prog_solutions_CN64_loc <- "../Raw/FullLife/CN_64Evaluations.csv"
prog_solutions_CN128_loc <- "../Raw/FullLife/CN_128Evaluations.csv"
prog_solutions_CN256_loc <- "../Raw/FullLife/CN_256Evaluations.csv"
```
```{r}
prog_solutions_CN1 <- read.csv(prog_solutions_CN1_loc, na.strings = "NONE")
prog_solutions_CN2 <- read.csv(prog_solutions_CN2_loc, na.strings = "NONE")
prog_solutions_CN4 <- read.csv(prog_solutions_CN4_loc, na.strings = "NONE")
prog_solutions_CN8 <- read.csv(prog_solutions_CN8_loc, na.strings = "NONE")
prog_solutions_CN16 <- read.csv(prog_solutions_CN16_loc, na.strings = "NONE")
prog_solutions_CN32 <- read.csv(prog_solutions_CN32_loc, na.strings = "NONE")
prog_solutions_CN64 <- read.csv(prog_solutions_CN64_loc, na.strings = "NONE")
prog_solutions_CN128 <- read.csv(prog_solutions_CN128_loc, na.strings = "NONE")
prog_solutions_CN256 <- read.csv(prog_solutions_CN256_loc, na.strings = "NONE")
```
## Analysis
Count of solutions found per problem (30 replicates each)
```{r}
ggplot(data = prog_solutions_CN1, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN1-CS512 - 1000 gens worth of evals") +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN1_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN2, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN2-CS256  - 1000 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN2_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN4, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN4-CS128  - 1000 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN4_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN8, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN8-CS64  - 1000 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN8_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN16, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN16-CS32  - 1000 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN16_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN32, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN32-CS16  - 1000 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN32_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN64, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN64-CS8  - 1000 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN64_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN128, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN128-CS4  - 1000 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN128_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN256, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN256-CS2  - 1000 gens worth of evals") +
coord_flip() + facet_wrap( ~ problem) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
ggsave("../Figs/Evaluations/SolutionCount/FullLife/CN256_Count.png", height=5, width=6)
```
---
title: "Sorting network data exploration"
output:
html_document:
keep_md: yes
toc: true
toc_float: true
collapsed: false
theme: default
pdf_document: default
---
## Setup
### Dependencies
```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(plyr)
library(reshape2)
library(cowplot)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/Raw/HalfLife/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
```
### Load Data
```{r}
prog_solutions_CN1_loc <- "../Raw/HalfLife/CN_1Evaluations.csv"
prog_solutions_CN2_loc <- "../Raw/HalfLife/CN_2Evaluations.csv"
prog_solutions_CN4_loc <- "../Raw/HalfLife/CN_4Evaluations.csv"
prog_solutions_CN8_loc <- "../Raw/HalfLife/CN_8Evaluations.csv"
prog_solutions_CN16_loc <- "../Raw/HalfLife/CN_16Evaluations.csv"
prog_solutions_CN32_loc <- "../Raw/HalfLife/CN_32Evaluations.csv"
prog_solutions_CN64_loc <- "../Raw/HalfLife/CN_64Evaluations.csv"
prog_solutions_CN128_loc <- "../Raw/HalfLife/CN_128Evaluations.csv"
prog_solutions_CN256_loc <- "../Raw/HalfLife/CN_256Evaluations.csv"
```
```{r}
prog_solutions_CN1 <- read.csv(prog_solutions_CN1_loc, na.strings = "NONE")
prog_solutions_CN2 <- read.csv(prog_solutions_CN2_loc, na.strings = "NONE")
prog_solutions_CN4 <- read.csv(prog_solutions_CN4_loc, na.strings = "NONE")
prog_solutions_CN8 <- read.csv(prog_solutions_CN8_loc, na.strings = "NONE")
prog_solutions_CN16 <- read.csv(prog_solutions_CN16_loc, na.strings = "NONE")
prog_solutions_CN32 <- read.csv(prog_solutions_CN32_loc, na.strings = "NONE")
prog_solutions_CN64 <- read.csv(prog_solutions_CN64_loc, na.strings = "NONE")
prog_solutions_CN128 <- read.csv(prog_solutions_CN128_loc, na.strings = "NONE")
prog_solutions_CN256 <- read.csv(prog_solutions_CN256_loc, na.strings = "NONE")
```
## Analysis
Count of solutions found per problem (30 replicates each)
```{r}
ggplot(data = prog_solutions_CN1, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN1-CS512 - 500 gens worth of evals") +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN1_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN2, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN2-CS256  - 500 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN2_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN4, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN4-CS128  - 500 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN4_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN8, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN8-CS64  - 500 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN8_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN16, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN16-CS32  - 500 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN16_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN32, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN32-CS16  - 500 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN32_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN64, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN64-CS8  - 500 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN64_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN128, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN128-CS4  - 500 gens worth of evals") +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
coord_flip() + facet_wrap( ~ problem) + ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN128_Count.png", height=5, width=6)
ggplot(data = prog_solutions_CN256, mapping=aes(x=selection, y=count, fill=selection)) +
geom_bar(stat="identity") + xlab("Selection") + ylab("Solutions Found") + guides(fill=FALSE) +
geom_text(aes(label=count), nudge_y=2) +
ggtitle("CN256-CS2  - 500 gens worth of evals") +
coord_flip() + facet_wrap( ~ problem) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
scale_x_discrete(limits = c("Lexicase", "Cohort-Lexicase", "Down Sample", "Prog-Only Cohort", "Truncated")) +
ggsave("../Figs/Evaluations/SolutionCount/HalfLife/CN256_Count.png", height=5, width=6)
```
